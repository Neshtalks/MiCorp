{"version":3,"sources":["main.js"],"names":["document","addEventListener","menuToggle","querySelector","navLinks","dropdowns","querySelectorAll","classList","toggle","e","contains","target","remove","forEach","dropdown","window","innerWidth","preventDefault","link","navbar","scrollY","add","anchor","targetId","getAttribute","targetElement","scrollTo","top","offsetTop","behavior","initScrollReveal","resizeTimer","body","clearTimeout","setTimeout","contactForm","getElementById","name","value","email","message","alert","submitButton","disabled","innerHTML","Promise","resolve","reset","observer","IntersectionObserver","entries","entry","isIntersecting","threshold","el","observe","animateElements","options","rootMargin","element","floatingContacts","contactHero","heroHeight","offsetHeight","scrollPosition","style","transform","opacity"],"mappings":"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","sourcesContent":["// Mobile Menu Toggle\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    // Mobile menu toggle\r\n    const menuToggle = document.querySelector('.menu-toggle');\r\n    const navLinks = document.querySelector('.nav-links');\r\n    const dropdowns = document.querySelectorAll('.dropdown');\r\n\r\n    if (menuToggle && navLinks) {\r\n        menuToggle.addEventListener('click', function() {\r\n            navLinks.classList.toggle('active');\r\n            menuToggle.classList.toggle('active');\r\n        });\r\n\r\n        // Close menu when clicking outside\r\n        document.addEventListener('click', function(e) {\r\n            if (!navLinks.contains(e.target) && !menuToggle.contains(e.target)) {\r\n                navLinks.classList.remove('active');\r\n                menuToggle.classList.remove('active');\r\n            }\r\n        });\r\n    }\r\n\r\n    // Handle dropdowns in mobile view\r\n    dropdowns.forEach(dropdown => {\r\n        dropdown.addEventListener('click', function(e) {\r\n            if (window.innerWidth <= 768) {\r\n                e.preventDefault();\r\n                this.classList.toggle('active');\r\n            }\r\n        });\r\n    });\r\n\r\n    // Close mobile menu when clicking on a link\r\n    document.querySelectorAll('.nav-links a').forEach(link => {\r\n        link.addEventListener('click', () => {\r\n            menuToggle.classList.remove('active');\r\n            navLinks.classList.remove('active');\r\n        });\r\n    });\r\n    \r\n    // Navbar scroll effect\r\n    const navbar = document.querySelector('.navbar');\r\n    if (navbar) {\r\n        window.addEventListener('scroll', function() {\r\n            if (window.scrollY > 50) {\r\n                navbar.classList.add('scrolled');\r\n            } else {\r\n                navbar.classList.remove('scrolled');\r\n            }\r\n        });\r\n    }\r\n    \r\n    // Smooth scrolling for anchor links\r\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n        anchor.addEventListener('click', function(e) {\r\n            e.preventDefault();\r\n            \r\n            const targetId = this.getAttribute('href');\r\n            if (targetId === '#') return;\r\n            \r\n            const targetElement = document.querySelector(targetId);\r\n            if (targetElement) {\r\n                window.scrollTo({\r\n                    top: targetElement.offsetTop - 80,\r\n                    behavior: 'smooth'\r\n                });\r\n            }\r\n        });\r\n    });\r\n    \r\n    // Initialize scroll reveal animations\r\n    initScrollReveal();\r\n\r\n    // Handle animations on resize\r\n    let resizeTimer;\r\n    window.addEventListener('resize', () => {\r\n        document.body.classList.add('resize-animation-stopper');\r\n        clearTimeout(resizeTimer);\r\n        resizeTimer = setTimeout(() => {\r\n            document.body.classList.remove('resize-animation-stopper');\r\n        }, 400);\r\n    });\r\n\r\n    // Contact Form Handling\r\n    const contactForm = document.getElementById('contactForm');\r\n    if (contactForm) {\r\n        contactForm.addEventListener('submit', async function(e) {\r\n            e.preventDefault();\r\n            \r\n            // Basic form validation\r\n            const name = document.getElementById('name').value;\r\n            const email = document.getElementById('email').value;\r\n            const message = document.getElementById('message').value;\r\n            \r\n            if (!name || !email || !message) {\r\n                alert('Please fill in all required fields');\r\n                return;\r\n            }\r\n\r\n            // Add loading state to button\r\n            const submitButton = contactForm.querySelector('button[type=\"submit\"]');\r\n            submitButton.disabled = true;\r\n            submitButton.innerHTML = 'Sending...';\r\n\r\n            try {\r\n                // Here you would typically send the form data to your server\r\n                // For now, we'll just simulate a submission\r\n                await new Promise(resolve => setTimeout(resolve, 1000));\r\n                alert('Thank you for your message. We will contact you soon!');\r\n                contactForm.reset();\r\n            } catch (error) {\r\n                alert('There was an error sending your message. Please try again.');\r\n            } finally {\r\n                submitButton.disabled = false;\r\n                submitButton.innerHTML = 'Send Message';\r\n            }\r\n        });\r\n    }\r\n\r\n    // Intersection Observer for scroll animations\r\n    const observer = new IntersectionObserver((entries) => {\r\n        entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n                entry.target.classList.add('visible');\r\n            }\r\n        });\r\n    }, { threshold: 0.1 });\r\n\r\n    // Observe all animated elements\r\n    document.querySelectorAll('.animate-from-left, .animate-from-right, .animate-from-bottom')\r\n        .forEach(el => observer.observe(el));\r\n});\r\n\r\n// Enhanced Scroll Reveal Animation\r\nfunction initScrollReveal() {\r\n    const animateElements = document.querySelectorAll(\r\n        '.animate-from-bottom, .animate-from-left, .animate-from-right, .reveal'\r\n    );\r\n    \r\n    const options = {\r\n        threshold: 0.1,\r\n        rootMargin: '0px 0px -50px 0px'\r\n    };\r\n    \r\n    const observer = new IntersectionObserver((entries) => {\r\n        entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n                entry.target.classList.add('active');\r\n                // Optional: Reset animation when element is out of view\r\n                // } else {\r\n                //     entry.target.classList.remove('active');\r\n            }\r\n        });\r\n    }, options);\r\n    \r\n    animateElements.forEach(element => {\r\n        observer.observe(element);\r\n        // Add initial state class\r\n        element.classList.add('animate-init');\r\n    });\r\n}\r\n  // Additional animation for floating contacts on scroll\r\n        window.addEventListener('scroll', function() {\r\n            const floatingContacts = document.querySelector('.floating-contacts');\r\n            const contactHero = document.querySelector('.contact-hero');\r\n            const heroHeight = contactHero.offsetHeight;\r\n            const scrollPosition = window.scrollY;\r\n            \r\n            if (scrollPosition > heroHeight * 0.3) {\r\n                floatingContacts.style.transform = 'translateY(0) scale(0.9)';\r\n                floatingContacts.style.opacity = '0.9';\r\n            } else {\r\n                floatingContacts.style.transform = 'translateY(0) scale(1)';\r\n                floatingContacts.style.opacity = '1';\r\n            }\r\n        });\r\n\r\n// Initialize animations after page load\r\nwindow.addEventListener('load', initScrollReveal);"],"file":"main.dev.js"}