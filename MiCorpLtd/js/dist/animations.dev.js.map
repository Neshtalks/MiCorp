{"version":3,"sources":["animations.js"],"names":["document","addEventListener","hero","querySelector","window","scrollPosition","pageYOffset","style","backgroundPositionY","productCards","querySelectorAll","forEach","card","e","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","centerX","width","centerY","height","angleX","angleY","transform","animateOnScroll","elements","element","elementPosition","screenPosition","innerHeight","animationPlayState","revealElements","revealOnScroll","elementTop","windowHeight","classList","add","observer","IntersectionObserver","entries","entry","isIntersecting","animateStats","unobserve","target","statsSection","observe","observerOptions","threshold","rootMargin","revealCallback","revealObserver"],"mappings":"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","sourcesContent":["// Additional animations and effects\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    // Parallax effect for hero section\r\n    const hero = document.querySelector('.hero');\r\n    if (hero) {\r\n        window.addEventListener('scroll', function() {\r\n            const scrollPosition = window.pageYOffset;\r\n            hero.style.backgroundPositionY = scrollPosition * 0.5 + 'px';\r\n        });\r\n    }    \r\n    // Product card hover effect\r\n    const productCards = document.querySelectorAll('.product-card');\r\n    productCards.forEach(card => {\r\n        card.addEventListener('mousemove', function(e) {\r\n            const rect = this.getBoundingClientRect();\r\n            const x = e.clientX - rect.left;\r\n            const y = e.clientY - rect.top;\r\n            \r\n            const centerX = rect.width / 2;\r\n            const centerY = rect.height / 2;\r\n            \r\n            const angleX = (y - centerY) / 20;\r\n            const angleY = (centerX - x) / 20;\r\n            \r\n            this.style.transform = `perspective(1000px) rotateX(${angleX}deg) rotateY(${angleY}deg)`;\r\n        });\r\n        \r\n        card.addEventListener('mouseleave', function() {\r\n            this.style.transform = 'perspective(1000px) rotateX(0) rotateY(0)';\r\n        });\r\n    });\r\n    \r\n    // Animate elements when they come into view\r\n    const animateOnScroll = function() {\r\n        const elements = document.querySelectorAll('.animate-from-bottom, .animate-from-left, .animate-from-right, .animate-fade-in');\r\n        \r\n        elements.forEach(element => {\r\n            const elementPosition = element.getBoundingClientRect().top;\r\n            const screenPosition = window.innerHeight / 1.2;\r\n            \r\n            if (elementPosition < screenPosition) {\r\n                element.style.animationPlayState = 'running';\r\n            }\r\n        });\r\n    };\r\n    \r\n    window.addEventListener('scroll', animateOnScroll);\r\n    animateOnScroll(); // Run once on page load\r\n});\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    // Reveal animations\r\n    const revealElements = document.querySelectorAll('.reveal');\r\n    \r\n    const revealOnScroll = () => {\r\n        revealElements.forEach(element => {\r\n            const elementTop = element.getBoundingClientRect().top;\r\n            const windowHeight = window.innerHeight;\r\n            \r\n            if (elementTop < windowHeight - 100) {\r\n                element.classList.add('active');\r\n            }\r\n        });\r\n    };\r\n\r\n    window.addEventListener('scroll', revealOnScroll);\r\n    revealOnScroll(); // Initial check\r\n\r\n    // Trigger stats animation when section is in view\r\n    const observer = new IntersectionObserver((entries) => {\r\n        entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n                animateStats();\r\n                observer.unobserve(entry.target);\r\n            }\r\n        });\r\n    });\r\n\r\n    const statsSection = document.querySelector('.stats-section');\r\n    if (statsSection) {\r\n        observer.observe(statsSection);\r\n    }\r\n});\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const observerOptions = {\r\n        threshold: 0.2,\r\n        rootMargin: '50px'\r\n    };\r\n\r\n    const revealCallback = (entries) => {\r\n        entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n                entry.target.classList.add('reveal');\r\n            }\r\n        });\r\n    };\r\n\r\n    const revealObserver = new IntersectionObserver(revealCallback, observerOptions);\r\n\r\n    document.querySelectorAll('.product-card, .vehicle-card').forEach(element => {\r\n        revealObserver.observe(element);\r\n    });\r\n});"],"file":"animations.dev.js"}